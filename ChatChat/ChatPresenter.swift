//
//  ChatPresenter.swift
//  ChatChat
//
//  Created by Kenneth Yip on 2017-11-24.
//  Copyright (c) 2017 Razeware LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChatPresentationLogic
{
    func presentTextMessage(response: Chat.TextMessage.Response)
    func presentPhotoMessage(response: Chat.PhotoMessage.Response)
    func presentFetchedImage(response: Chat.ImageData.Response)
    func presentTypingUpdate(response: Chat.Typing.Response)
    func presentPhotoMessageSent()
}

class ChatPresenter: ChatPresentationLogic
{
  weak var viewController: ChatDisplayLogic?
  
    func presentTextMessage(response: Chat.TextMessage.Response) {
        let viewModel = Chat.TextMessage.ViewModel(senderId: response.senderId, senderName: response.senderName, text: response.text)
        viewController?.displayTextMessage(viewModel: viewModel)
    }
    
    func presentPhotoMessage(response: Chat.PhotoMessage.Response) {
        let viewModel = Chat.PhotoMessage.ViewModel(senderId: response.senderId, key: response.key, photoUrl: response.photoUrl)
        viewController?.displayPhotoMessage(viewModel: viewModel)
    }
    
    func presentFetchedImage(response: Chat.ImageData.Response) {
        let viewModel = Chat.ImageData.ViewModel(key: response.key, image: response.image)
        viewController?.displayFetchedImage(viewModel: viewModel)
    }
    
    func presentTypingUpdate(response: Chat.Typing.Response) {
        let viewModel = Chat.Typing.ViewModel(isTyping: response.isTyping)
        viewController?.displayTypingUpdate(viewModel: viewModel)
    }
    
    func presentPhotoMessageSent() {
        viewController?.displayPhotoMessageSent()
    }
}
